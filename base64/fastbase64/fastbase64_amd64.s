// +build !noasm !appengine
// Code generated by asm2asm, DO NOT EDIT.

#include "go_asm.h"
#include "funcdata.h"
#include "textflag.h"

TEXT Â·__native_entry__(SB), NOSPLIT, $0
	NO_LOCAL_POINTERS
	LONG $0xf9058d48; WORD $0xffff; BYTE $0xff // leaq         $-7(%rip), %rax
	MOVQ AX, 8(SP)
	RET

_chromium_base64_encode:
	BYTE $0x55                                 // pushq        %rbp
	WORD $0x8948; BYTE $0xe5                   // movq         %rsp, %rbp
	WORD $0x5741                               // pushq        %r15
	WORD $0x5641                               // pushq        %r14
	BYTE $0x53                                 // pushq        %rbx
	ANDQ $-8, SP
	XORL R11, R11
	CMPQ DX, $3
	JB   LBB0_1
	MOVQ DX, R8
	MOVQ DI, AX
	ADDQ $-2, R8
	JE   LBB0_5
	XORL R11, R11
	LONG $0x0f0d8d4c; WORD $0x000d; BYTE $0x00 // leaq         $3343(%rip), %r9  /* _e0(%rip) */
	LONG $0x08158d4c; WORD $0x000e; BYTE $0x00 // leaq         $3592(%rip), %r10  /* _e2(%rip) */
	MOVQ DI, AX

LBB0_4:
	MOVBLZX 0(SI)(R11*1), CX
	MOVBLZX 1(SI)(R11*1), R14
	MOVBLZX 2(SI)(R11*1), R15
	MOVBLZX 0(CX)(R9*1), BX
	MOVB    BX, 0(AX)
	SHLL    $4, CX
	ANDL    $48, CX
	MOVQ    R14, BX
	SHRQ    $4, BX
	ORQ     CX, BX
	MOVBLZX 0(R10)(BX*1), CX
	MOVB    CX, 1(AX)
	ANDL    $15, R14
	MOVBLZX 0(R15)(R10*1), CX
	SHRQ    $6, R15
	LEAQ    0(R15)(R14*4), BX
	MOVBLZX 0(R10)(BX*1), BX
	MOVB    BX, 2(AX)
	MOVB    CX, 3(AX)
	ADDQ    $4, AX
	ADDQ    $3, R11
	CMPQ    R11, R8
	JB      LBB0_4

LBB0_5:
	SUBQ R11, DX
	JE   LBB0_10

LBB0_6:
	CMPQ    DX, $1
	JNE     LBB0_8
	MOVBLZX 0(SI)(R11*1), CX
	LONG    $0x95158d48; WORD $0x000c; BYTE $0x00 // leaq         $3221(%rip), %rdx  /* _e0(%rip) */
	MOVB    0(CX)(DX*1), DX
	MOVB    DX, 0(AX)
	SHLL    $4, CX
	ANDL    $48, CX
	LONG    $0x83158d48; WORD $0x000d; BYTE $0x00 // leaq         $3459(%rip), %rdx  /* _e2(%rip) */
	MOVB    0(CX)(DX*1), CX
	MOVB    CX, 1(AX)
	MOVB    $61, 2(AX)
	JMP     LBB0_9

LBB0_8:
	MOVBLZX 0(SI)(R11*1), CX
	MOVBLZX 1(SI)(R11*1), DX
	LONG    $0x65358d48; WORD $0x000c; BYTE $0x00 // leaq         $3173(%rip), %rsi  /* _e0(%rip) */
	MOVB    0(CX)(SI*1), BX
	MOVB    BX, 0(AX)
	SHLL    $4, CX
	ANDL    $48, CX
	MOVQ    DX, SI
	SHRQ    $4, SI
	ORQ     CX, SI
	LONG    $0x490d8d48; WORD $0x000d; BYTE $0x00 // leaq         $3401(%rip), %rcx  /* _e2(%rip) */
	MOVB    0(CX)(SI*1), BX
	MOVB    BX, 1(AX)
	ANDL    $15, DX
	MOVB    0(CX)(DX*4), CX
	MOVB    CX, 2(AX)

LBB0_9:
	MOVB $61, 3(AX)
	ADDQ $4, AX

LBB0_10:
	MOVB $0, 0(AX)
	SUBQ DI, AX
	LEAQ -24(BP), SP
	BYTE $0x5b       // popq         %rbx
	WORD $0x5e41     // popq         %r14
	WORD $0x5f41     // popq         %r15
	BYTE $0x5d       // popq         %rbp
	RET

LBB0_1:
	MOVQ DI, AX
	SUBQ R11, DX
	JNE  LBB0_6
	JMP  LBB0_10

_chromium_base64_decode:
	BYTE  $0x55               // pushq        %rbp
	WORD  $0x8948; BYTE $0xe5 // movq         %rsp, %rbp
	WORD  $0x5741             // pushq        %r15
	WORD  $0x5641             // pushq        %r14
	BYTE  $0x53               // pushq        %rbx
	ANDQ  $-8, SP
	TESTQ DX, DX
	JE    LBB1_1
	MOVQ  $-1, AX
	CMPQ  DX, $4
	JB    LBB1_21
	MOVL  DX, CX
	ANDL  $3, CX
	TESTQ CX, CX
	JNE   LBB1_21
	CMPB  -1(SI)(DX*1), $61
	JNE   LBB1_6
	LEAQ  -2(DX), CX
	CMPB  -2(SI)(DX*1), $61
	LEAQ  -1(DX), DX
	LONG  $0xd1440f48         // cmoveq       %rcx, %rdx

LBB1_6:
	XORL  CX, CX
	MOVL  DX, R9
	ANDL  $3, R9
	SETEQ CX
	SHRQ  $2, DX
	MOVQ  DX, R8
	SUBQ  CX, R8
	JE    LBB1_10
	NEGQ  CX
	ADDQ  CX, DX
	LONG  $0xa1158d4c; WORD $0x000d; BYTE $0x00 // leaq         $3489(%rip), %r10  /* _d0(%rip) */
	LONG  $0x9a1d8d4c; WORD $0x0011; BYTE $0x00 // leaq         $4506(%rip), %r11  /* _d1(%rip) */
	LONG  $0x93358d4c; WORD $0x0015; BYTE $0x00 // leaq         $5523(%rip), %r14  /* _d2(%rip) */
	LONG  $0x8c3d8d4c; WORD $0x0019; BYTE $0x00 // leaq         $6540(%rip), %r15  /* _d3(%rip) */

LBB1_8:
	MOVBLZX 0(SI), BX
	MOVBLZX 1(SI), CX
	MOVL    0(R11)(CX*4), CX
	ORL     0(R10)(BX*4), CX
	MOVBLZX 2(SI), BX
	ORL     0(R14)(BX*4), CX
	MOVBLZX 3(SI), BX
	ORL     0(R15)(BX*4), CX
	CMPL    CX, $33554430
	JA      LBB1_21
	MOVL    CX, BX
	SHRL    $16, BX
	MOVB    CX, 0(DI)
	MOVB    CH, 1(DI)
	MOVB    BX, 2(DI)
	ADDQ    $3, DI
	ADDQ    $4, SI
	DECQ    DX
	JNE     LBB1_8

LBB1_10:
	CMPL    R9, $2
	JE      LBB1_17
	CMPL    R9, $1
	JE      LBB1_15
	TESTL   R9, R9
	JNE     LBB1_18
	MOVBLZX 0(SI), DX
	LONG    $0x240d8d4c; WORD $0x000d; BYTE $0x00 // leaq         $3364(%rip), %r9  /* _d0(%rip) */
	MOVBLZX 1(SI), CX
	LONG    $0x191d8d48; WORD $0x0011; BYTE $0x00 // leaq         $4377(%rip), %rbx  /* _d1(%rip) */
	MOVL    0(BX)(CX*4), CX
	ORL     0(R9)(DX*4), CX
	MOVBLZX 2(SI), DX
	LONG    $0x071d8d48; WORD $0x0015; BYTE $0x00 // leaq         $5383(%rip), %rbx  /* _d2(%rip) */
	ORL     0(BX)(DX*4), CX
	MOVBLZX 3(SI), DX
	LONG    $0xf9358d48; WORD $0x0018; BYTE $0x00 // leaq         $6393(%rip), %rsi  /* _d3(%rip) */
	ORL     0(SI)(DX*4), CX
	CMPL    CX, $33554430
	JA      LBB1_21
	MOVL    CX, AX
	SHRL    $16, AX
	MOVB    CX, 0(DI)
	MOVB    CH, 1(DI)
	MOVB    AX, 2(DI)
	LEAQ    0(R8)(R8*2), AX
	ADDQ    $3, AX
	JMP     LBB1_21

LBB1_1:
	XORL AX, AX

LBB1_21:
	LEAQ -24(BP), SP
	BYTE $0x5b       // popq         %rbx
	WORD $0x5e41     // popq         %r14
	WORD $0x5f41     // popq         %r15
	BYTE $0x5d       // popq         %rbp
	RET

LBB1_17:
	MOVBLZX 0(SI), DX
	LONG    $0xc01d8d48; WORD $0x000c; BYTE $0x00 // leaq         $3264(%rip), %rbx  /* _d0(%rip) */
	MOVBLZX 1(SI), CX
	LONG    $0xb5358d48; WORD $0x0010; BYTE $0x00 // leaq         $4277(%rip), %rsi  /* _d1(%rip) */
	MOVL    0(SI)(CX*4), CX
	ORL     0(BX)(DX*4), CX
	JMP     LBB1_16

LBB1_15:
	MOVBLZX 0(SI), CX
	LONG    $0xa3158d48; WORD $0x000c; BYTE $0x00 // leaq         $3235(%rip), %rdx  /* _d0(%rip) */
	MOVL    0(DX)(CX*4), CX

LBB1_16:
	MOVL CX, DX
	SHRL $8, DX
	MOVB CX, 0(DI)
	JMP  LBB1_19

LBB1_18:
	MOVBLZX 0(SI), DX
	LONG    $0x8d158d4c; WORD $0x000c; BYTE $0x00 // leaq         $3213(%rip), %r10  /* _d0(%rip) */
	MOVBLZX 1(SI), CX
	LONG    $0x821d8d48; WORD $0x0010; BYTE $0x00 // leaq         $4226(%rip), %rbx  /* _d1(%rip) */
	MOVL    0(BX)(CX*4), CX
	ORL     0(R10)(DX*4), CX
	MOVBLZX 2(SI), DX
	LONG    $0x70358d48; WORD $0x0014; BYTE $0x00 // leaq         $5232(%rip), %rsi  /* _d2(%rip) */
	ORL     0(SI)(DX*4), CX
	MOVL    CX, DX
	SHRL    $8, DX
	MOVW    CX, 0(DI)

LBB1_19:
	SHLL    $8, DX
	MOVWLZX DX, DX
	ANDL    $-65281, CX
	ORL     DX, CX
	CMPL    CX, $33554430
	JA      LBB1_21
	LEAQ    0(R8)(R8*2), CX
	ADDL    R9, R9
	LEAL    0(R9)(R9*2), AX
	SHRL    $3, AX
	ADDQ    CX, AX
	JMP     LBB1_21

LCPI2_0:
	BYTE $0x01                                         // .byte 1
	BYTE $0x00                                         // .byte 0
	BYTE $0x02                                         // .byte 2
	BYTE $0x01                                         // .byte 1
	BYTE $0x04                                         // .byte 4
	BYTE $0x03                                         // .byte 3
	BYTE $0x05                                         // .byte 5
	BYTE $0x04                                         // .byte 4
	BYTE $0x07                                         // .byte 7
	BYTE $0x06                                         // .byte 6
	BYTE $0x08                                         // .byte 8
	BYTE $0x07                                         // .byte 7
	BYTE $0x0a                                         // .byte 10
	BYTE $0x09                                         // .byte 9
	BYTE $0x0b                                         // .byte 11
	BYTE $0x0a                                         // .byte 10
	BYTE $0x05                                         // .byte 5
	BYTE $0x04                                         // .byte 4
	BYTE $0x06                                         // .byte 6
	BYTE $0x05                                         // .byte 5
	BYTE $0x08                                         // .byte 8
	BYTE $0x07                                         // .byte 7
	BYTE $0x09                                         // .byte 9
	BYTE $0x08                                         // .byte 8
	BYTE $0x0b                                         // .byte 11
	BYTE $0x0a                                         // .byte 10
	BYTE $0x0c                                         // .byte 12
	BYTE $0x0b                                         // .byte 11
	BYTE $0x0e                                         // .byte 14
	BYTE $0x0d                                         // .byte 13
	BYTE $0x0f                                         // .byte 15
	BYTE $0x0e                                         // .byte 14
	QUAD $0x0000000000000000; QUAD $0x0000000000000000 // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000 // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

LCPI2_3:
	QUAD $0x3333333333333333; QUAD $0x3333333333333333 // .space 16, '3333333333333333'
	QUAD $0x3333333333333333; QUAD $0x3333333333333333 // .space 16, '3333333333333333'
	QUAD $0x3333333333333333; QUAD $0x3333333333333333 // .space 16, '3333333333333333'
	QUAD $0x3333333333333333; QUAD $0x3333333333333333 // .space 16, '3333333333333333'

LCPI2_4:
	QUAD $0x1a1a1a1a1a1a1a1a; QUAD $0x1a1a1a1a1a1a1a1a // .space 16, '\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a'
	QUAD $0x1a1a1a1a1a1a1a1a; QUAD $0x1a1a1a1a1a1a1a1a // .space 16, '\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a'
	QUAD $0x1a1a1a1a1a1a1a1a; QUAD $0x1a1a1a1a1a1a1a1a // .space 16, '\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a'
	QUAD $0x1a1a1a1a1a1a1a1a; QUAD $0x1a1a1a1a1a1a1a1a // .space 16, '\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a\x1a'

LCPI2_5:
	QUAD $0x0d0d0d0d0d0d0d0d; QUAD $0x0d0d0d0d0d0d0d0d // .space 16, '\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r'
	QUAD $0x0d0d0d0d0d0d0d0d; QUAD $0x0d0d0d0d0d0d0d0d // .space 16, '\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r'
	QUAD $0x0d0d0d0d0d0d0d0d; QUAD $0x0d0d0d0d0d0d0d0d // .space 16, '\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r'
	QUAD $0x0d0d0d0d0d0d0d0d; QUAD $0x0d0d0d0d0d0d0d0d // .space 16, '\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r'

LCPI2_6:
	BYTE $0x47 // .byte 71
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xed // .byte 237
	BYTE $0xf0 // .byte 240
	BYTE $0x41 // .byte 65
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x47 // .byte 71
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xed // .byte 237
	BYTE $0xf0 // .byte 240
	BYTE $0x41 // .byte 65
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x47 // .byte 71
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xed // .byte 237
	BYTE $0xf0 // .byte 240
	BYTE $0x41 // .byte 65
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x47 // .byte 71
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xfc // .byte 252
	BYTE $0xed // .byte 237
	BYTE $0xf0 // .byte 240
	BYTE $0x41 // .byte 65
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0

LCPI2_1:
	BYTE $0x01 // .byte 1
	BYTE $0x00 // .byte 0
	BYTE $0x02 // .byte 2
	BYTE $0x01 // .byte 1
	BYTE $0x04 // .byte 4
	BYTE $0x03 // .byte 3
	BYTE $0x05 // .byte 5
	BYTE $0x04 // .byte 4
	BYTE $0x07 // .byte 7
	BYTE $0x06 // .byte 6
	BYTE $0x08 // .byte 8
	BYTE $0x07 // .byte 7
	BYTE $0x0a // .byte 10
	BYTE $0x09 // .byte 9
	BYTE $0x0b // .byte 11
	BYTE $0x0a // .byte 10

LCPI2_2:
	BYTE $0x05 // .byte 5
	BYTE $0x04 // .byte 4
	BYTE $0x06 // .byte 6
	BYTE $0x05 // .byte 5
	BYTE $0x08 // .byte 8
	BYTE $0x07 // .byte 7
	BYTE $0x09 // .byte 9
	BYTE $0x08 // .byte 8
	BYTE $0x0b // .byte 11
	BYTE $0x0a // .byte 10
	BYTE $0x0c // .byte 12
	BYTE $0x0b // .byte 11
	BYTE $0x0e // .byte 14
	BYTE $0x0d // .byte 13
	BYTE $0x0f // .byte 15
	BYTE $0x0e // .byte 14

_fast_avx512bw_base64_encode:
	BYTE $0x55                                 // pushq        %rbp
	WORD $0x8948; BYTE $0xe5                   // movq         %rsp, %rbp
	WORD $0x5741                               // pushq        %r15
	WORD $0x5641                               // pushq        %r14
	WORD $0x5441                               // pushq        %r12
	BYTE $0x53                                 // pushq        %rbx
	ANDQ $-8, SP
	MOVQ DX, R11
	CMPQ DX, $64
	JB   LBB2_1
	LEAQ -64(R11), DX
	MOVQ $-6148914691236517205, AX
	LONG $0xf6fbe2c4; BYTE $0xc0               // mulxq        %rax, %rax, %rax
	BTL  $5, AX
	JB   LBB2_3
	LONG $0x00fde3c4; WORD $0x9406             // vpermq       $148, (%rsi), %ymm0
	QUAD $0xfffe5805007de2c4; BYTE $0xff       // vpshufb      $-424(%rip), %ymm0, %ymm0  /* LCPI2_0(%rip) */
	LONG $0x4e6ffac5; BYTE $0x20               // vmovdqu      $32(%rsi), %xmm1
	LONG $0x0f71e3c4; WORD $0x1056; BYTE $0x08 // vpalignr     $8, $16(%rsi), %xmm1, %xmm2
	QUAD $0xffff83150069e2c4; BYTE $0xff       // vpshufb      $-125(%rip), %xmm2, %xmm2  /* LCPI2_1(%rip) */
	QUAD $0xffff8a0d0071e2c4; BYTE $0xff       // vpshufb      $-118(%rip), %xmm1, %xmm1  /* LCPI2_2(%rip) */
	LONG $0x386de3c4; WORD $0x01c9             // vinserti128  $1, %xmm1, %ymm2, %ymm1
	LONG $0x48fdf362; WORD $0xc13a; BYTE $0x01 // vinserti64x4 $1, %ymm1, %zmm0, %zmm0
	QUAD $0xfe630dd8487df162; WORD $0xffff     // vpsubusb     $-413(%rip), %zmm0, %zmm1  /* LCPI2_3(%rip) */
	QUAD $0xfe990d64497df162; WORD $0xffff     // vpcmpgtb     $-359(%rip), %zmm0, %k1  /* LCPI2_4(%rip) */ // TODO(zchee): use vpcmpltb
	QUAD $0xfecf0d6f487ff162; WORD $0xffff     // vmovdqu8     $-305(%rip), %zmm1  /* LCPI2_5(%rip) */
	QUAD $0xff05156f48fdf162; WORD $0xffff     // vmovdqa64    $-251(%rip), %zmm2  /* LCPI2_6(%rip) */
	LONG $0x486df262; WORD $0xc900             // vpshufb      %zmm1, %zmm2, %zmm1
	LONG $0x487df162; WORD $0xc1fc             // vpaddb       %zmm1, %zmm0, %zmm0
	LONG $0x48fef162; WORD $0x077f             // vmovdqu64    %zmm0, (%rdi)
	ADDQ $48, SI
	LEAQ 64(DI), R8
	ADDQ $-48, R11
	CMPQ DX, $48
	JAE  LBB2_6
	JMP  LBB2_8

LBB2_1:
	MOVQ DI, R8
	JMP  LBB2_8

LBB2_3:
	MOVQ DI, R8
	CMPQ DX, $48
	JB   LBB2_8

LBB2_6:
	QUAD $0xffffff0f056f7ac5               // vmovdqu      $-241(%rip), %xmm8  /* LCPI2_2(%rip) */
	QUAD $0xfffffef70d6ffac5               // vmovdqu      $-265(%rip), %xmm1  /* LCPI2_1(%rip) */
	QUAD $0xfffffdaf156ffec5               // vmovdqu      $-593(%rip), %ymm2  /* LCPI2_0(%rip) */
	QUAD $0xfde51d6f48fdf162; WORD $0xffff // vmovdqa64    $-539(%rip), %zmm3  /* LCPI2_3(%rip) */
	QUAD $0xfe1b256f48fdf162; WORD $0xffff // vmovdqa64    $-485(%rip), %zmm4  /* LCPI2_4(%rip) */
	QUAD $0xfe512d6f48fdf162; WORD $0xffff // vmovdqa64    $-431(%rip), %zmm5  /* LCPI2_5(%rip) */
	QUAD $0xfe87356f48fdf162; WORD $0xffff // vmovdqa64    $-377(%rip), %zmm6  /* LCPI2_6(%rip) */

LBB2_7:
	LONG $0x7e6ffac5; BYTE $0x20               // vmovdqu      $32(%rsi), %xmm7
	LONG $0x0f41e3c4; WORD $0x1046; BYTE $0x08 // vpalignr     $8, $16(%rsi), %xmm7, %xmm0
	LONG $0x0041c2c4; BYTE $0xf8               // vpshufb      %xmm8, %xmm7, %xmm7
	LONG $0x0079e2c4; BYTE $0xc1               // vpshufb      %xmm1, %xmm0, %xmm0
	LONG $0x387de3c4; WORD $0x01c7             // vinserti128  $1, %xmm7, %ymm0, %ymm0
	LONG $0x00fde3c4; WORD $0x943e             // vpermq       $148, (%rsi), %ymm7
	LONG $0x0045e2c4; BYTE $0xfa               // vpshufb      %ymm2, %ymm7, %ymm7
	LONG $0x48c5f362; WORD $0xc03a; BYTE $0x01 // vinserti64x4 $1, %ymm0, %zmm7, %zmm0
	LONG $0x487df162; WORD $0xfbd8             // vpsubusb     %zmm3, %zmm0, %zmm7
	LONG $0x495df162; WORD $0xc864             // vpcmpgtb     %zmm0, %zmm4, %k1
	LONG $0x487ff162; WORD $0xfd6f             // vmovdqu8     %zmm5, %zmm7
	LONG $0x484df262; WORD $0xff00             // vpshufb      %zmm7, %zmm6, %zmm7
	LONG $0x487df162; WORD $0xc7fc             // vpaddb       %zmm7, %zmm0, %zmm0
	LONG $0x48fed162; WORD $0x007f             // vmovdqu64    %zmm0, (%r8)
	LONG $0x466ffac5; BYTE $0x50               // vmovdqu      $80(%rsi), %xmm0
	LONG $0x0f79e3c4; WORD $0x407e; BYTE $0x08 // vpalignr     $8, $64(%rsi), %xmm0, %xmm7
	LONG $0x0079c2c4; BYTE $0xc0               // vpshufb      %xmm8, %xmm0, %xmm0
	LONG $0x0041e2c4; BYTE $0xf9               // vpshufb      %xmm1, %xmm7, %xmm7
	LONG $0x3845e3c4; WORD $0x01c0             // vinserti128  $1, %xmm0, %ymm7, %ymm0
	LONG $0x00fde3c4; WORD $0x307e; BYTE $0x94 // vpermq       $148, $48(%rsi), %ymm7
	LONG $0x0045e2c4; BYTE $0xfa               // vpshufb      %ymm2, %ymm7, %ymm7
	LONG $0x48c5f362; WORD $0xc03a; BYTE $0x01 // vinserti64x4 $1, %ymm0, %zmm7, %zmm0
	LONG $0x487df162; WORD $0xfbd8             // vpsubusb     %zmm3, %zmm0, %zmm7
	LONG $0x495df162; WORD $0xc864             // vpcmpgtb     %zmm0, %zmm4, %k1
	LONG $0x487ff162; WORD $0xfd6f             // vmovdqu8     %zmm5, %zmm7
	LONG $0x484df262; WORD $0xff00             // vpshufb      %zmm7, %zmm6, %zmm7
	LONG $0x487df162; WORD $0xc7fc             // vpaddb       %zmm7, %zmm0, %zmm0
	LONG $0x48fed162; WORD $0x407f; BYTE $0x01 // vmovdqu64    %zmm0, $64(%r8)
	ADDQ $96, SI
	SUBQ $-128, R8
	ADDQ $-96, R11
	CMPQ R11, $63
	JA   LBB2_7

LBB2_8:
	XORL R12, R12
	CMPQ R11, $3
	JB   LBB2_9
	MOVQ R11, R9
	MOVQ R8, AX
	ADDQ $-2, R9
	JE   LBB2_13
	XORL R12, R12
	LONG $0xdd158d4c; WORD $0x0006; BYTE $0x00 // leaq         $1757(%rip), %r10  /* _e0(%rip) */
	LONG $0xd6358d4c; WORD $0x0007; BYTE $0x00 // leaq         $2006(%rip), %r14  /* _e2(%rip) */
	MOVQ R8, AX

LBB2_12:
	MOVBLZX 0(SI)(R12*1), BX
	MOVBLZX 1(SI)(R12*1), R15
	MOVBLZX 2(SI)(R12*1), CX
	MOVBLZX 0(BX)(R10*1), DX
	MOVB    DX, 0(AX)
	SHLL    $4, BX
	ANDL    $48, BX
	MOVQ    R15, DX
	SHRQ    $4, DX
	ORQ     BX, DX
	MOVBLZX 0(R14)(DX*1), DX
	MOVB    DX, 1(AX)
	ANDL    $15, R15
	MOVBLZX 0(CX)(R14*1), DX
	SHRQ    $6, CX
	LEAQ    0(CX)(R15*4), CX
	MOVBLZX 0(R14)(CX*1), CX
	MOVB    CX, 2(AX)
	MOVB    DX, 3(AX)
	ADDQ    $4, AX
	ADDQ    $3, R12
	CMPQ    R12, R9
	JB      LBB2_12

LBB2_13:
	SUBQ R12, R11
	JE   LBB2_18

LBB2_14:
	CMPQ    R11, $1
	JNE     LBB2_16
	MOVBLZX 0(SI)(R12*1), CX
	LONG    $0x63158d48; WORD $0x0006; BYTE $0x00 // leaq         $1635(%rip), %rdx  /* _e0(%rip) */
	MOVB    0(CX)(DX*1), DX
	MOVB    DX, 0(AX)
	SHLL    $4, CX
	ANDL    $48, CX
	LONG    $0x51158d48; WORD $0x0007; BYTE $0x00 // leaq         $1873(%rip), %rdx  /* _e2(%rip) */
	MOVB    0(CX)(DX*1), CX
	MOVB    CX, 1(AX)
	MOVB    $61, 2(AX)
	JMP     LBB2_17

LBB2_16:
	MOVBLZX 0(SI)(R12*1), CX
	MOVBLZX 1(SI)(R12*1), DX
	LONG    $0x33358d48; WORD $0x0006; BYTE $0x00 // leaq         $1587(%rip), %rsi  /* _e0(%rip) */
	MOVB    0(CX)(SI*1), BX
	MOVB    BX, 0(AX)
	SHLL    $4, CX
	ANDL    $48, CX
	MOVQ    DX, SI
	SHRQ    $4, SI
	ORQ     CX, SI
	LONG    $0x170d8d48; WORD $0x0007; BYTE $0x00 // leaq         $1815(%rip), %rcx  /* _e2(%rip) */
	MOVB    0(CX)(SI*1), BX
	MOVB    BX, 1(AX)
	ANDL    $15, DX
	MOVB    0(CX)(DX*4), CX
	MOVB    CX, 2(AX)

LBB2_17:
	MOVB $61, 3(AX)
	ADDQ $4, AX

LBB2_18:
	MOVB $0, 0(AX)
	MOVQ AX, CX
	SUBQ R8, CX
	SUBQ DI, AX
	CMPQ CX, $-1
	LONG $0xc1440f48         // cmoveq       %rcx, %rax
	LEAQ -32(BP), SP
	BYTE $0x5b               // popq         %rbx
	WORD $0x5c41             // popq         %r12
	WORD $0x5e41             // popq         %r14
	WORD $0x5f41             // popq         %r15
	BYTE $0x5d               // popq         %rbp
	WORD $0xf8c5; BYTE $0x77 // vzeroupper
	RET

LBB2_9:
	MOVQ R8, AX
	SUBQ R12, R11
	JNE  LBB2_14
	JMP  LBB2_18

LCPI3_0:
	QUAD $0x0f0f0f0f0f0f0f0f; QUAD $0x0f0f0f0f0f0f0f0f // .space 16, '\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f'
	QUAD $0x0f0f0f0f0f0f0f0f; QUAD $0x0f0f0f0f0f0f0f0f // .space 16, '\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f'
	QUAD $0x0f0f0f0f0f0f0f0f; QUAD $0x0f0f0f0f0f0f0f0f // .space 16, '\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f'
	QUAD $0x0f0f0f0f0f0f0f0f; QUAD $0x0f0f0f0f0f0f0f0f // .space 16, '\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f\x0f'

LCPI3_1:
	BYTE $0xa8 // .byte 168
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf0 // .byte 240
	BYTE $0x54 // .byte 84
	BYTE $0x50 // .byte 80
	BYTE $0x50 // .byte 80
	BYTE $0x50 // .byte 80
	BYTE $0x54 // .byte 84
	BYTE $0xa8 // .byte 168
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf0 // .byte 240
	BYTE $0x54 // .byte 84
	BYTE $0x50 // .byte 80
	BYTE $0x50 // .byte 80
	BYTE $0x50 // .byte 80
	BYTE $0x54 // .byte 84
	BYTE $0xa8 // .byte 168
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf0 // .byte 240
	BYTE $0x54 // .byte 84
	BYTE $0x50 // .byte 80
	BYTE $0x50 // .byte 80
	BYTE $0x50 // .byte 80
	BYTE $0x54 // .byte 84
	BYTE $0xa8 // .byte 168
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf8 // .byte 248
	BYTE $0xf0 // .byte 240
	BYTE $0x54 // .byte 84
	BYTE $0x50 // .byte 80
	BYTE $0x50 // .byte 80
	BYTE $0x50 // .byte 80
	BYTE $0x54 // .byte 84

LCPI3_2:
	BYTE $0x01 // .byte 1
	BYTE $0x02 // .byte 2
	BYTE $0x04 // .byte 4
	BYTE $0x08 // .byte 8
	BYTE $0x10 // .byte 16
	BYTE $0x20 // .byte 32
	BYTE $0x40 // .byte 64
	BYTE $0x80 // .byte 128
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x01 // .byte 1
	BYTE $0x02 // .byte 2
	BYTE $0x04 // .byte 4
	BYTE $0x08 // .byte 8
	BYTE $0x10 // .byte 16
	BYTE $0x20 // .byte 32
	BYTE $0x40 // .byte 64
	BYTE $0x80 // .byte 128
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x01 // .byte 1
	BYTE $0x02 // .byte 2
	BYTE $0x04 // .byte 4
	BYTE $0x08 // .byte 8
	BYTE $0x10 // .byte 16
	BYTE $0x20 // .byte 32
	BYTE $0x40 // .byte 64
	BYTE $0x80 // .byte 128
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x01 // .byte 1
	BYTE $0x02 // .byte 2
	BYTE $0x04 // .byte 4
	BYTE $0x08 // .byte 8
	BYTE $0x10 // .byte 16
	BYTE $0x20 // .byte 32
	BYTE $0x40 // .byte 64
	BYTE $0x80 // .byte 128
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0

LCPI3_3:
	QUAD $0x2f2f2f2f2f2f2f2f; QUAD $0x2f2f2f2f2f2f2f2f // .space 16, '////////////////'
	QUAD $0x2f2f2f2f2f2f2f2f; QUAD $0x2f2f2f2f2f2f2f2f // .space 16, '////////////////'
	QUAD $0x2f2f2f2f2f2f2f2f; QUAD $0x2f2f2f2f2f2f2f2f // .space 16, '////////////////'
	QUAD $0x2f2f2f2f2f2f2f2f; QUAD $0x2f2f2f2f2f2f2f2f // .space 16, '////////////////'

LCPI3_4:
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x13 // .byte 19
	BYTE $0x04 // .byte 4
	BYTE $0xbf // .byte 191
	BYTE $0xbf // .byte 191
	BYTE $0xb9 // .byte 185
	BYTE $0xb9 // .byte 185
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x13 // .byte 19
	BYTE $0x04 // .byte 4
	BYTE $0xbf // .byte 191
	BYTE $0xbf // .byte 191
	BYTE $0xb9 // .byte 185
	BYTE $0xb9 // .byte 185
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x13 // .byte 19
	BYTE $0x04 // .byte 4
	BYTE $0xbf // .byte 191
	BYTE $0xbf // .byte 191
	BYTE $0xb9 // .byte 185
	BYTE $0xb9 // .byte 185
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x13 // .byte 19
	BYTE $0x04 // .byte 4
	BYTE $0xbf // .byte 191
	BYTE $0xbf // .byte 191
	BYTE $0xb9 // .byte 185
	BYTE $0xb9 // .byte 185
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0
	BYTE $0x00 // .byte 0

LCPI3_5:
	QUAD $0x1010101010101010; QUAD $0x1010101010101010 // .space 16, '\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10'
	QUAD $0x1010101010101010; QUAD $0x1010101010101010 // .space 16, '\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10'
	QUAD $0x1010101010101010; QUAD $0x1010101010101010 // .space 16, '\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10'
	QUAD $0x1010101010101010; QUAD $0x1010101010101010 // .space 16, '\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10\x10'

LCPI3_6:
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1
	BYTE $0x40 // .byte 64
	BYTE $0x01 // .byte 1

LCPI3_7:
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1
	WORD $0x1000 // .word 4096
	WORD $0x0001 // .word 1

LCPI3_8:
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x02 // .byte 2
	BYTE $0x01 // .byte 1
	BYTE $0x00 // .byte 0
	BYTE $0x06 // .byte 6
	BYTE $0x05 // .byte 5
	BYTE $0x04 // .byte 4
	BYTE $0x0a // .byte 10
	BYTE $0x09 // .byte 9
	BYTE $0x08 // .byte 8
	BYTE $0x0e // .byte 14
	BYTE $0x0d // .byte 13
	BYTE $0x0c // .byte 12
	BYTE $0x02 // .byte 2
	BYTE $0x01 // .byte 1
	BYTE $0x00 // .byte 0
	BYTE $0x06 // .byte 6
	BYTE $0x02 // .byte 2
	BYTE $0x01 // .byte 1
	BYTE $0x00 // .byte 0
	BYTE $0x06 // .byte 6
	BYTE $0x02 // .byte 2
	BYTE $0x01 // .byte 1
	BYTE $0x00 // .byte 0
	BYTE $0x06 // .byte 6
	BYTE $0x02 // .byte 2
	BYTE $0x01 // .byte 1
	BYTE $0x00 // .byte 0
	BYTE $0x06 // .byte 6

LCPI3_11:
	BYTE $0x02 // .byte 2
	BYTE $0x01 // .byte 1
	BYTE $0x00 // .byte 0
	BYTE $0x06 // .byte 6
	BYTE $0x05 // .byte 5
	BYTE $0x04 // .byte 4
	BYTE $0x0a // .byte 10
	BYTE $0x09 // .byte 9
	BYTE $0x08 // .byte 8
	BYTE $0x0e // .byte 14
	BYTE $0x0d // .byte 13
	BYTE $0x0c // .byte 12
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x05 // .byte 5
	BYTE $0x04 // .byte 4
	BYTE $0x0a // .byte 10
	BYTE $0x09 // .byte 9
	BYTE $0x08 // .byte 8
	BYTE $0x0e // .byte 14
	BYTE $0x0d // .byte 13
	BYTE $0x0c // .byte 12
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'

LCPI3_9:
	BYTE $0x08 // .byte 8
	BYTE $0x0e // .byte 14
	BYTE $0x0d // .byte 13
	BYTE $0x0c // .byte 12
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'

LCPI3_10:
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x02 // .byte 2
	BYTE $0x01 // .byte 1
	BYTE $0x00 // .byte 0
	BYTE $0x06 // .byte 6

LCPI3_12:
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x00 // .space 1, '\x00'
	BYTE $0x02 // .byte 2
	BYTE $0x01 // .byte 1
	BYTE $0x00 // .byte 0
	BYTE $0x06 // .byte 6
	BYTE $0x05 // .byte 5
	BYTE $0x04 // .byte 4
	BYTE $0x0a // .byte 10
	BYTE $0x09 // .byte 9

_fast_avx512bw_base64_decode:
	BYTE $0x55                             // pushq        %rbp
	WORD $0x8948; BYTE $0xe5               // movq         %rsp, %rbp
	WORD $0x5741                           // pushq        %r15
	WORD $0x5641                           // pushq        %r14
	WORD $0x5441                           // pushq        %r12
	BYTE $0x53                             // pushq        %rbx
	ANDQ $-8, SP
	MOVQ DI, R12
	CMPQ DX, $88
	JB   LBB3_1
	QUAD $0xfd6a056f48fdf162; WORD $0xffff // vmovdqa64    $-662(%rip), %zmm0  /* LCPI3_0(%rip) */
	QUAD $0xfda00d6f48fd7162; WORD $0xffff // vmovdqa64    $-608(%rip), %zmm9  /* LCPI3_1(%rip) */
	QUAD $0xfdd6056f48fde162; WORD $0xffff // vmovdqa64    $-554(%rip), %zmm16  /* LCPI3_2(%rip) */
	QUAD $0xfe0c056f48fd7162; WORD $0xffff // vmovdqa64    $-500(%rip), %zmm8  /* LCPI3_3(%rip) */
	QUAD $0xfe421d6f48fd7162; WORD $0xffff // vmovdqa64    $-446(%rip), %zmm11  /* LCPI3_4(%rip) */
	QUAD $0xfeb80d6f48fde162; WORD $0xffff // vmovdqa64    $-328(%rip), %zmm17  /* LCPI3_6(%rip) */
	QUAD $0xfeee356f48fdf162; WORD $0xffff // vmovdqa64    $-274(%rip), %zmm6  /* LCPI3_7(%rip) */
	QUAD $0xffffff263d6ffec5               // vmovdqu      $-218(%rip), %ymm7  /* LCPI3_8(%rip) */
	QUAD $0xffffff5e1d6ffac5               // vmovdqu      $-162(%rip), %xmm3  /* LCPI3_9(%rip) */
	QUAD $0xffffff660d6ffac5               // vmovdqu      $-154(%rip), %xmm1  /* LCPI3_10(%rip) */
	QUAD $0xffffff2e156f7ec5               // vmovdqu      $-210(%rip), %ymm10  /* LCPI3_11(%rip) */
	QUAD $0xffffff66256ffac5               // vmovdqu      $-154(%rip), %xmm4  /* LCPI3_12(%rip) */
	MOVQ R12, AX

LBB3_3:
	LONG  $0x48fe7162; WORD $0x266f             // vmovdqu64    (%rsi), %zmm12
	LONG  $0x4815d162; WORD $0xd472; BYTE $0x04 // vpsrld       $4, %zmm12, %zmm13
	LONG  $0x48957162; WORD $0xe8db             // vpandq       %zmm0, %zmm13, %zmm13
	LONG  $0x489d7162; WORD $0xf0db             // vpandq       %zmm0, %zmm12, %zmm14
	LONG  $0x48355262; WORD $0xf600             // vpshufb      %zmm14, %zmm9, %zmm14
	LONG  $0x407d5262; WORD $0xfd00             // vpshufb      %zmm13, %zmm16, %zmm15
	LONG  $0x4805d262; WORD $0xc626             // vptestmb     %zmm14, %zmm15, %k0
	LONG  $0x98f8e1c4; BYTE $0xc0               // kortestq     %k0, %k0
	JAE   LBB3_29
	LONG  $0x491dd162; WORD $0xc874             // vpcmpeqb     %zmm8, %zmm12, %k1
	LONG  $0x48255262; WORD $0xed00             // vpshufb      %zmm13, %zmm11, %zmm13
	QUAD  $0xfdf72d6f487f7162; WORD $0xffff     // vmovdqu8     $-521(%rip), %zmm13  /* LCPI3_5(%rip) */
	LONG  $0x48155162; WORD $0xe4fc             // vpaddb       %zmm12, %zmm13, %zmm12
	LONG  $0x481d3262; WORD $0xe104             // vpmaddubsw   %zmm17, %zmm12, %zmm12
	LONG  $0x481d7162; WORD $0xe6f5             // vpmaddwd     %zmm6, %zmm12, %zmm12
	LONG  $0x48fd5362; WORD $0xe53b; BYTE $0x01 // vextracti64x4 $1, %zmm12, %ymm13
	LONG  $0x461543c4; WORD $0x21f4             // vperm2i128   $33, %ymm12, %ymm13, %ymm14
	LONG  $0x000d62c4; BYTE $0xf7               // vpshufb      %ymm7, %ymm14, %ymm14
	LONG  $0x001162c4; BYTE $0xfb               // vpshufb      %xmm3, %xmm13, %xmm15
	LONG  $0x020d43c4; WORD $0x01f7             // vpblendd     $1, %ymm15, %ymm14, %ymm14
	LONG  $0x397d63c4; WORD $0x01e2             // vextracti128 $1, %ymm12, %xmm2
	LONG  $0x0069e2c4; BYTE $0xd1               // vpshufb      %xmm1, %xmm2, %xmm2
	LONG  $0x001d42c4; BYTE $0xe2               // vpshufb      %ymm10, %ymm12, %ymm12
	LONG  $0x021de3c4; WORD $0x08d2             // vpblendd     $8, %ymm2, %ymm12, %ymm2
	LONG  $0x0011e2c4; BYTE $0xec               // vpshufb      %xmm4, %xmm13, %xmm5
	LONG  $0x387de3c4; WORD $0x01ed             // vinserti128  $1, %xmm5, %ymm0, %ymm5
	LONG  $0x026de3c4; WORD $0xc0d5             // vpblendd     $192, %ymm5, %ymm2, %ymm2
	LONG  $0x48edd362; WORD $0xd63a; BYTE $0x01 // vinserti64x4 $1, %ymm14, %zmm2, %zmm2
	LONG  $0x48fef162; WORD $0x107f             // vmovdqu64    %zmm2, (%rax)
	ADDQ  $-64, DX
	ADDQ  $64, SI
	ADDQ  $48, AX
	CMPQ  DX, $87
	JA    LBB3_3
	TESTQ DX, DX
	JE    LBB3_6

LBB3_7:
	CMPQ  DX, $4
	JB    LBB3_29
	MOVL  DX, CX
	ANDL  $3, CX
	TESTQ CX, CX
	JNE   LBB3_29
	CMPB  -1(SI)(DX*1), $61
	JNE   LBB3_11
	LEAQ  -2(DX), CX
	CMPB  -2(SI)(DX*1), $61
	LEAQ  -1(DX), DX
	LONG  $0xd1440f48       // cmoveq       %rcx, %rdx

LBB3_11:
	XORL  CX, CX
	MOVL  DX, R9
	ANDL  $3, R9
	SETEQ CX
	SHRQ  $2, DX
	MOVQ  DX, R8
	SUBQ  CX, R8
	JE    LBB3_12
	NEGQ  CX
	ADDQ  CX, DX
	LONG  $0xaa158d4c; WORD $0x0003; BYTE $0x00 // leaq         $938(%rip), %r10  /* _d0(%rip) */
	LONG  $0xa31d8d4c; WORD $0x0007; BYTE $0x00 // leaq         $1955(%rip), %r11  /* _d1(%rip) */
	LONG  $0x9c358d4c; WORD $0x000b; BYTE $0x00 // leaq         $2972(%rip), %r14  /* _d2(%rip) */
	LONG  $0x953d8d4c; WORD $0x000f; BYTE $0x00 // leaq         $3989(%rip), %r15  /* _d3(%rip) */
	MOVQ  AX, DI

LBB3_14:
	MOVBLZX 0(SI), BX
	MOVBLZX 1(SI), CX
	MOVL    0(R11)(CX*4), CX
	ORL     0(R10)(BX*4), CX
	MOVBLZX 2(SI), BX
	ORL     0(R14)(BX*4), CX
	MOVBLZX 3(SI), BX
	ORL     0(R15)(BX*4), CX
	CMPL    CX, $33554430
	JA      LBB3_29
	MOVL    CX, BX
	SHRL    $16, BX
	MOVB    CX, 0(DI)
	MOVB    CH, 1(DI)
	MOVB    BX, 2(DI)
	ADDQ    $3, DI
	ADDQ    $4, SI
	DECQ    DX
	JNE     LBB3_14
	CMPL    R9, $2
	JE      LBB3_23

LBB3_17:
	CMPL    R9, $1
	JE      LBB3_21
	TESTL   R9, R9
	JNE     LBB3_24
	MOVBLZX 0(SI), DX
	LONG    $0x260d8d4c; WORD $0x0003; BYTE $0x00 // leaq         $806(%rip), %r9  /* _d0(%rip) */
	MOVBLZX 1(SI), CX
	LONG    $0x1b1d8d48; WORD $0x0007; BYTE $0x00 // leaq         $1819(%rip), %rbx  /* _d1(%rip) */
	MOVL    0(BX)(CX*4), CX
	ORL     0(R9)(DX*4), CX
	MOVBLZX 2(SI), DX
	LONG    $0x091d8d48; WORD $0x000b; BYTE $0x00 // leaq         $2825(%rip), %rbx  /* _d2(%rip) */
	ORL     0(BX)(DX*4), CX
	MOVBLZX 3(SI), DX
	LONG    $0xfb358d48; WORD $0x000e; BYTE $0x00 // leaq         $3835(%rip), %rsi  /* _d3(%rip) */
	ORL     0(SI)(DX*4), CX
	CMPL    CX, $33554430
	JA      LBB3_29
	MOVL    CX, DX
	SHRL    $16, DX
	MOVB    CX, 0(DI)
	MOVB    CH, 1(DI)
	MOVB    DX, 2(DI)
	LEAQ    0(R8)(R8*2), CX
	ADDQ    $3, CX
	JMP     LBB3_27

LBB3_1:
	MOVQ  R12, AX
	TESTQ DX, DX
	JNE   LBB3_7

LBB3_6:
	SUBQ R12, AX
	JMP  LBB3_30

LBB3_12:
	MOVQ AX, DI
	CMPL R9, $2
	JNE  LBB3_17

LBB3_23:
	MOVBLZX 0(SI), DX
	LONG    $0xa71d8d48; WORD $0x0002; BYTE $0x00 // leaq         $679(%rip), %rbx  /* _d0(%rip) */
	MOVBLZX 1(SI), CX
	LONG    $0x9c358d48; WORD $0x0006; BYTE $0x00 // leaq         $1692(%rip), %rsi  /* _d1(%rip) */
	MOVL    0(SI)(CX*4), CX
	ORL     0(BX)(DX*4), CX
	JMP     LBB3_22

LBB3_21:
	MOVBLZX 0(SI), CX
	LONG    $0x8a158d48; WORD $0x0002; BYTE $0x00 // leaq         $650(%rip), %rdx  /* _d0(%rip) */
	MOVL    0(DX)(CX*4), CX

LBB3_22:
	MOVL CX, DX
	SHRL $8, DX
	MOVB CX, 0(DI)
	JMP  LBB3_25

LBB3_24:
	MOVBLZX 0(SI), DX
	LONG    $0x74158d4c; WORD $0x0002; BYTE $0x00 // leaq         $628(%rip), %r10  /* _d0(%rip) */
	MOVBLZX 1(SI), CX
	LONG    $0x691d8d48; WORD $0x0006; BYTE $0x00 // leaq         $1641(%rip), %rbx  /* _d1(%rip) */
	MOVL    0(BX)(CX*4), CX
	ORL     0(R10)(DX*4), CX
	MOVBLZX 2(SI), DX
	LONG    $0x57358d48; WORD $0x000a; BYTE $0x00 // leaq         $2647(%rip), %rsi  /* _d2(%rip) */
	ORL     0(SI)(DX*4), CX
	MOVL    CX, DX
	SHRL    $8, DX
	MOVW    CX, 0(DI)

LBB3_25:
	SHLL    $8, DX
	MOVWLZX DX, DX
	ANDL    $-65281, CX
	ORL     DX, CX
	CMPL    CX, $33554430
	JA      LBB3_29
	LEAQ    0(R8)(R8*2), DX
	ADDL    R9, R9
	LEAL    0(R9)(R9*2), CX
	SHRL    $3, CX
	ADDQ    DX, CX

LBB3_27:
	CMPQ CX, $-1
	JE   LBB3_29
	SUBQ R12, AX
	ADDQ CX, AX
	JMP  LBB3_30

LBB3_29:
	MOVQ $-1, AX

LBB3_30:
	LEAQ -32(BP), SP
	BYTE $0x5b               // popq         %rbx
	WORD $0x5c41             // popq         %r12
	WORD $0x5e41             // popq         %r14
	WORD $0x5f41             // popq         %r15
	BYTE $0x5d               // popq         %rbp
	WORD $0xf8c5; BYTE $0x77 // vzeroupper
	RET

_e0:
	QUAD $0x4242424241414141; QUAD $0x4444444443434343 // .ascii 16, 'AAAABBBBCCCCDDDD'
	QUAD $0x4646464645454545; QUAD $0x4848484847474747 // .ascii 16, 'EEEEFFFFGGGGHHHH'
	QUAD $0x4a4a4a4a49494949; QUAD $0x4c4c4c4c4b4b4b4b // .ascii 16, 'IIIIJJJJKKKKLLLL'
	QUAD $0x4e4e4e4e4d4d4d4d; QUAD $0x505050504f4f4f4f // .ascii 16, 'MMMMNNNNOOOOPPPP'
	QUAD $0x5252525251515151; QUAD $0x5454545453535353 // .ascii 16, 'QQQQRRRRSSSSTTTT'
	QUAD $0x5656565655555555; QUAD $0x5858585857575757 // .ascii 16, 'UUUUVVVVWWWWXXXX'
	QUAD $0x5a5a5a5a59595959; QUAD $0x6262626261616161 // .ascii 16, 'YYYYZZZZaaaabbbb'
	QUAD $0x6464646463636363; QUAD $0x6666666665656565 // .ascii 16, 'ccccddddeeeeffff'
	QUAD $0x6868686867676767; QUAD $0x6a6a6a6a69696969 // .ascii 16, 'gggghhhhiiiijjjj'
	QUAD $0x6c6c6c6c6b6b6b6b; QUAD $0x6e6e6e6e6d6d6d6d // .ascii 16, 'kkkkllllmmmmnnnn'
	QUAD $0x707070706f6f6f6f; QUAD $0x7272727271717171 // .ascii 16, 'ooooppppqqqqrrrr'
	QUAD $0x7474747473737373; QUAD $0x7676767675757575 // .ascii 16, 'ssssttttuuuuvvvv'
	QUAD $0x7878787877777777; QUAD $0x7a7a7a7a79797979 // .ascii 16, 'wwwwxxxxyyyyzzzz'
	QUAD $0x3131313130303030; QUAD $0x3333333332323232 // .ascii 16, '0000111122223333'
	QUAD $0x3535353534343434; QUAD $0x3737373736363636 // .ascii 16, '4444555566667777'
	QUAD $0x3939393938383838; QUAD $0x2f2f2f2f2b2b2b2b // .ascii 16, '88889999++++////'

_e2:
	QUAD $0x4847464544434241; QUAD $0x504f4e4d4c4b4a49 // .ascii 16, 'ABCDEFGHIJKLMNOP'
	QUAD $0x5857565554535251; QUAD $0x6665646362615a59 // .ascii 16, 'QRSTUVWXYZabcdef'
	QUAD $0x6e6d6c6b6a696867; QUAD $0x767574737271706f // .ascii 16, 'ghijklmnopqrstuv'
	QUAD $0x333231307a797877; QUAD $0x2f2b393837363534 // .ascii 16, 'wxyz0123456789+/'
	QUAD $0x4847464544434241; QUAD $0x504f4e4d4c4b4a49 // .ascii 16, 'ABCDEFGHIJKLMNOP'
	QUAD $0x5857565554535251; QUAD $0x6665646362615a59 // .ascii 16, 'QRSTUVWXYZabcdef'
	QUAD $0x6e6d6c6b6a696867; QUAD $0x767574737271706f // .ascii 16, 'ghijklmnopqrstuv'
	QUAD $0x333231307a797877; QUAD $0x2f2b393837363534 // .ascii 16, 'wxyz0123456789+/'
	QUAD $0x4847464544434241; QUAD $0x504f4e4d4c4b4a49 // .ascii 16, 'ABCDEFGHIJKLMNOP'
	QUAD $0x5857565554535251; QUAD $0x6665646362615a59 // .ascii 16, 'QRSTUVWXYZabcdef'
	QUAD $0x6e6d6c6b6a696867; QUAD $0x767574737271706f // .ascii 16, 'ghijklmnopqrstuv'
	QUAD $0x333231307a797877; QUAD $0x2f2b393837363534 // .ascii 16, 'wxyz0123456789+/'
	QUAD $0x4847464544434241; QUAD $0x504f4e4d4c4b4a49 // .ascii 16, 'ABCDEFGHIJKLMNOP'
	QUAD $0x5857565554535251; QUAD $0x6665646362615a59 // .ascii 16, 'QRSTUVWXYZabcdef'
	QUAD $0x6e6d6c6b6a696867; QUAD $0x767574737271706f // .ascii 16, 'ghijklmnopqrstuv'
	QUAD $0x333231307a797877; QUAD $0x2f2b393837363534 // .ascii 16, 'wxyz0123456789+/'

_d0:
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x000000f8 // .long 248
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x000000fc // .long 252
	LONG $0x000000d0 // .long 208
	LONG $0x000000d4 // .long 212
	LONG $0x000000d8 // .long 216
	LONG $0x000000dc // .long 220
	LONG $0x000000e0 // .long 224
	LONG $0x000000e4 // .long 228
	LONG $0x000000e8 // .long 232
	LONG $0x000000ec // .long 236
	LONG $0x000000f0 // .long 240
	LONG $0x000000f4 // .long 244
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x00000000 // .long 0
	LONG $0x00000004 // .long 4
	LONG $0x00000008 // .long 8
	LONG $0x0000000c // .long 12
	LONG $0x00000010 // .long 16
	LONG $0x00000014 // .long 20
	LONG $0x00000018 // .long 24
	LONG $0x0000001c // .long 28
	LONG $0x00000020 // .long 32
	LONG $0x00000024 // .long 36
	LONG $0x00000028 // .long 40
	LONG $0x0000002c // .long 44
	LONG $0x00000030 // .long 48
	LONG $0x00000034 // .long 52
	LONG $0x00000038 // .long 56
	LONG $0x0000003c // .long 60
	LONG $0x00000040 // .long 64
	LONG $0x00000044 // .long 68
	LONG $0x00000048 // .long 72
	LONG $0x0000004c // .long 76
	LONG $0x00000050 // .long 80
	LONG $0x00000054 // .long 84
	LONG $0x00000058 // .long 88
	LONG $0x0000005c // .long 92
	LONG $0x00000060 // .long 96
	LONG $0x00000064 // .long 100
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x00000068 // .long 104
	LONG $0x0000006c // .long 108
	LONG $0x00000070 // .long 112
	LONG $0x00000074 // .long 116
	LONG $0x00000078 // .long 120
	LONG $0x0000007c // .long 124
	LONG $0x00000080 // .long 128
	LONG $0x00000084 // .long 132
	LONG $0x00000088 // .long 136
	LONG $0x0000008c // .long 140
	LONG $0x00000090 // .long 144
	LONG $0x00000094 // .long 148
	LONG $0x00000098 // .long 152
	LONG $0x0000009c // .long 156
	LONG $0x000000a0 // .long 160
	LONG $0x000000a4 // .long 164
	LONG $0x000000a8 // .long 168
	LONG $0x000000ac // .long 172
	LONG $0x000000b0 // .long 176
	LONG $0x000000b4 // .long 180
	LONG $0x000000b8 // .long 184
	LONG $0x000000bc // .long 188
	LONG $0x000000c0 // .long 192
	LONG $0x000000c4 // .long 196
	LONG $0x000000c8 // .long 200
	LONG $0x000000cc // .long 204
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431

_d1:
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x0000e003 // .long 57347
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x0000f003 // .long 61443
	LONG $0x00004003 // .long 16387
	LONG $0x00005003 // .long 20483
	LONG $0x00006003 // .long 24579
	LONG $0x00007003 // .long 28675
	LONG $0x00008003 // .long 32771
	LONG $0x00009003 // .long 36867
	LONG $0x0000a003 // .long 40963
	LONG $0x0000b003 // .long 45059
	LONG $0x0000c003 // .long 49155
	LONG $0x0000d003 // .long 53251
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x00000000 // .long 0
	LONG $0x00001000 // .long 4096
	LONG $0x00002000 // .long 8192
	LONG $0x00003000 // .long 12288
	LONG $0x00004000 // .long 16384
	LONG $0x00005000 // .long 20480
	LONG $0x00006000 // .long 24576
	LONG $0x00007000 // .long 28672
	LONG $0x00008000 // .long 32768
	LONG $0x00009000 // .long 36864
	LONG $0x0000a000 // .long 40960
	LONG $0x0000b000 // .long 45056
	LONG $0x0000c000 // .long 49152
	LONG $0x0000d000 // .long 53248
	LONG $0x0000e000 // .long 57344
	LONG $0x0000f000 // .long 61440
	LONG $0x00000001 // .long 1
	LONG $0x00001001 // .long 4097
	LONG $0x00002001 // .long 8193
	LONG $0x00003001 // .long 12289
	LONG $0x00004001 // .long 16385
	LONG $0x00005001 // .long 20481
	LONG $0x00006001 // .long 24577
	LONG $0x00007001 // .long 28673
	LONG $0x00008001 // .long 32769
	LONG $0x00009001 // .long 36865
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x0000a001 // .long 40961
	LONG $0x0000b001 // .long 45057
	LONG $0x0000c001 // .long 49153
	LONG $0x0000d001 // .long 53249
	LONG $0x0000e001 // .long 57345
	LONG $0x0000f001 // .long 61441
	LONG $0x00000002 // .long 2
	LONG $0x00001002 // .long 4098
	LONG $0x00002002 // .long 8194
	LONG $0x00003002 // .long 12290
	LONG $0x00004002 // .long 16386
	LONG $0x00005002 // .long 20482
	LONG $0x00006002 // .long 24578
	LONG $0x00007002 // .long 28674
	LONG $0x00008002 // .long 32770
	LONG $0x00009002 // .long 36866
	LONG $0x0000a002 // .long 40962
	LONG $0x0000b002 // .long 45058
	LONG $0x0000c002 // .long 49154
	LONG $0x0000d002 // .long 53250
	LONG $0x0000e002 // .long 57346
	LONG $0x0000f002 // .long 61442
	LONG $0x00000003 // .long 3
	LONG $0x00001003 // .long 4099
	LONG $0x00002003 // .long 8195
	LONG $0x00003003 // .long 12291
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431

_d2:
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x00800f00 // .long 8392448
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x00c00f00 // .long 12586752
	LONG $0x00000d00 // .long 3328
	LONG $0x00400d00 // .long 4197632
	LONG $0x00800d00 // .long 8391936
	LONG $0x00c00d00 // .long 12586240
	LONG $0x00000e00 // .long 3584
	LONG $0x00400e00 // .long 4197888
	LONG $0x00800e00 // .long 8392192
	LONG $0x00c00e00 // .long 12586496
	LONG $0x00000f00 // .long 3840
	LONG $0x00400f00 // .long 4198144
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x00000000 // .long 0
	LONG $0x00400000 // .long 4194304
	LONG $0x00800000 // .long 8388608
	LONG $0x00c00000 // .long 12582912
	LONG $0x00000100 // .long 256
	LONG $0x00400100 // .long 4194560
	LONG $0x00800100 // .long 8388864
	LONG $0x00c00100 // .long 12583168
	LONG $0x00000200 // .long 512
	LONG $0x00400200 // .long 4194816
	LONG $0x00800200 // .long 8389120
	LONG $0x00c00200 // .long 12583424
	LONG $0x00000300 // .long 768
	LONG $0x00400300 // .long 4195072
	LONG $0x00800300 // .long 8389376
	LONG $0x00c00300 // .long 12583680
	LONG $0x00000400 // .long 1024
	LONG $0x00400400 // .long 4195328
	LONG $0x00800400 // .long 8389632
	LONG $0x00c00400 // .long 12583936
	LONG $0x00000500 // .long 1280
	LONG $0x00400500 // .long 4195584
	LONG $0x00800500 // .long 8389888
	LONG $0x00c00500 // .long 12584192
	LONG $0x00000600 // .long 1536
	LONG $0x00400600 // .long 4195840
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x00800600 // .long 8390144
	LONG $0x00c00600 // .long 12584448
	LONG $0x00000700 // .long 1792
	LONG $0x00400700 // .long 4196096
	LONG $0x00800700 // .long 8390400
	LONG $0x00c00700 // .long 12584704
	LONG $0x00000800 // .long 2048
	LONG $0x00400800 // .long 4196352
	LONG $0x00800800 // .long 8390656
	LONG $0x00c00800 // .long 12584960
	LONG $0x00000900 // .long 2304
	LONG $0x00400900 // .long 4196608
	LONG $0x00800900 // .long 8390912
	LONG $0x00c00900 // .long 12585216
	LONG $0x00000a00 // .long 2560
	LONG $0x00400a00 // .long 4196864
	LONG $0x00800a00 // .long 8391168
	LONG $0x00c00a00 // .long 12585472
	LONG $0x00000b00 // .long 2816
	LONG $0x00400b00 // .long 4197120
	LONG $0x00800b00 // .long 8391424
	LONG $0x00c00b00 // .long 12585728
	LONG $0x00000c00 // .long 3072
	LONG $0x00400c00 // .long 4197376
	LONG $0x00800c00 // .long 8391680
	LONG $0x00c00c00 // .long 12585984
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431

_d3:
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x003e0000 // .long 4063232
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x003f0000 // .long 4128768
	LONG $0x00340000 // .long 3407872
	LONG $0x00350000 // .long 3473408
	LONG $0x00360000 // .long 3538944
	LONG $0x00370000 // .long 3604480
	LONG $0x00380000 // .long 3670016
	LONG $0x00390000 // .long 3735552
	LONG $0x003a0000 // .long 3801088
	LONG $0x003b0000 // .long 3866624
	LONG $0x003c0000 // .long 3932160
	LONG $0x003d0000 // .long 3997696
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x00000000 // .long 0
	LONG $0x00010000 // .long 65536
	LONG $0x00020000 // .long 131072
	LONG $0x00030000 // .long 196608
	LONG $0x00040000 // .long 262144
	LONG $0x00050000 // .long 327680
	LONG $0x00060000 // .long 393216
	LONG $0x00070000 // .long 458752
	LONG $0x00080000 // .long 524288
	LONG $0x00090000 // .long 589824
	LONG $0x000a0000 // .long 655360
	LONG $0x000b0000 // .long 720896
	LONG $0x000c0000 // .long 786432
	LONG $0x000d0000 // .long 851968
	LONG $0x000e0000 // .long 917504
	LONG $0x000f0000 // .long 983040
	LONG $0x00100000 // .long 1048576
	LONG $0x00110000 // .long 1114112
	LONG $0x00120000 // .long 1179648
	LONG $0x00130000 // .long 1245184
	LONG $0x00140000 // .long 1310720
	LONG $0x00150000 // .long 1376256
	LONG $0x00160000 // .long 1441792
	LONG $0x00170000 // .long 1507328
	LONG $0x00180000 // .long 1572864
	LONG $0x00190000 // .long 1638400
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x001a0000 // .long 1703936
	LONG $0x001b0000 // .long 1769472
	LONG $0x001c0000 // .long 1835008
	LONG $0x001d0000 // .long 1900544
	LONG $0x001e0000 // .long 1966080
	LONG $0x001f0000 // .long 2031616
	LONG $0x00200000 // .long 2097152
	LONG $0x00210000 // .long 2162688
	LONG $0x00220000 // .long 2228224
	LONG $0x00230000 // .long 2293760
	LONG $0x00240000 // .long 2359296
	LONG $0x00250000 // .long 2424832
	LONG $0x00260000 // .long 2490368
	LONG $0x00270000 // .long 2555904
	LONG $0x00280000 // .long 2621440
	LONG $0x00290000 // .long 2686976
	LONG $0x002a0000 // .long 2752512
	LONG $0x002b0000 // .long 2818048
	LONG $0x002c0000 // .long 2883584
	LONG $0x002d0000 // .long 2949120
	LONG $0x002e0000 // .long 3014656
	LONG $0x002f0000 // .long 3080192
	LONG $0x00300000 // .long 3145728
	LONG $0x00310000 // .long 3211264
	LONG $0x00320000 // .long 3276800
	LONG $0x00330000 // .long 3342336
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
	LONG $0x01ffffff // .long 33554431
